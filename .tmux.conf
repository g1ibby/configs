# -----------------------------------------------------------------------------
# Prefix & Basic Configuration
# -----------------------------------------------------------------------------

# Use C-b as the prefix key, but allow it to be sent to other apps with a second C-b press
set-option -g prefix C-b
unbind-key C-b
bind-key C-b send-prefix
set -g status "on"

# Set the base index for panes and windows to start at 1 (like vim)
set -g pane-base-index 1
set -g base-index 1

# Set terminal type
set-option -g default-terminal screen-256color

# Refresh and reloading
bind-key r refresh-client
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# -----------------------------------------------------------------------------
# Vim Configuration
# -----------------------------------------------------------------------------

# Use vi keys in copy mode
setw -g mode-keys vi
set -g status-keys vi

# Smart pane switching with vim awareness
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"

# Vim-like bindings for copy mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# -----------------------------------------------------------------------------
# UI & Pane Configurations
# -----------------------------------------------------------------------------

# Enable mouse mode
setw -g mouse on

# Pane switching
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key a last-pane

# Splitting panes
bind-key v split-window -h
bind-key s split-window -v

# Visual enhancements
set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan
setw -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

# Window and pane resizing
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# Pane resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# -----------------------------------------------------------------------------
# Window Management
# -----------------------------------------------------------------------------

bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
bind-key C-o rotate-window

# Window notifications
setw -g monitor-activity on
set -g visual-activity on

# -----------------------------------------------------------------------------
# Clipboard & Copy Mode
# -----------------------------------------------------------------------------

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

bind-key [ copy-mode
bind-key ] paste-buffer

# -----------------------------------------------------------------------------
# Status Bar Configuration
# -----------------------------------------------------------------------------

set-option -g status-interval 0
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#H #[default]'
set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

# Fix for colors in certain terminals
set -ag terminal-overrides ",xterm-256color:RGB"
setw -g xterm-keys on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Reduce escape timing for faster response to keybindings
set -g escape-time 10
set -sg escape-time 10

# Enable focus events
set -g focus-events on

# Bindings for other utilities
bind-key : command-prompt
bind-key L clear-history
bind-key q display-panes

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set history limit and mouse/charset settings
set -g history-limit 50000
setw -q -g utf8 on                # charset

# ----------------------------=== Colorscheme ===--------------------------

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# --> Neon Latte
thm_bg="#150b26"
thm_fg="#fdebc3"
thm_fg_gutter="#3b4261"
thm_black="#393b44"
thm_gray="#2a2e36"
thm_red="#cf4f6d"
thm_green="#51ee72"
thm_yellow="#ffe070"
thm_blue="#96e2f0"
thm_magenta="#d97bf2"
thm_cyan="#63cdcf"
thm_white="#dfdfe0"
thm_orange="#edc580"
thm_pink="#d67ad2"
thm_black_br="#7f8c98"
thm_red_br="#e06c75"
thm_green_br="#58cd8b"
thm_yellow_br="#ffe37e"
thm_blue_br="#84cee4"
thm_magenta_br="#b8a1e3"
thm_cyan_br="#59f0ff"
thm_white_br="#fdebc3"
thm_orange_br="#f6a878"
thm_pink_br="#df97db"

# ----------------------------=== Theme ===--------------------------

# status
set -g status-position bottom
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_white_br}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_white_br}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue_br}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# --------=== Statusline

set -g status-left ""
set -g status-right "#[fg=$thm_magenta,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] #[fg=$thm_fg,bg=$thm_gray] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green_br]}#[bg=$thm_gray]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green_br]}#[fg=$thm_bg] #[fg=$thm_fg,bg=$thm_gray] #S "

# current_dir
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #{b:pane_current_path} "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_white_br,bg=$thm_bg] #{b:pane_current_path} "

# parent_dir/current_dir
# setw -g window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev) "
# setw -g window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_yellow} bg=${thm_bg} bold"
